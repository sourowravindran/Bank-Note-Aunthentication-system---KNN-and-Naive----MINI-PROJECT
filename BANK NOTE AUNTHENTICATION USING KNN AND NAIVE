# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Load the database
data = pd.read_csv("/content/data_banknote_authentication.txt",
                   sep=",",
                   names=["Variences",
                          "skewness",
                          "kurtosis",
                          "Entropy",
                          "class"],
                   header=None)
data.head()

# Analyze the data
data.shape

data.info()

data.describe()

# Drop duplicates
data.drop_duplicates

# Check for null values
data.isnull().sum()

# There are no null values

# Split the data
x = data.drop("class", axis=1)
y = data['class']

x.head()

y.head()

# Train and test the data
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

print("x_train shape:", x_train.shape)
print("y_train shape:", y_train.shape)
print("x_test shape:", x_test.shape)
print("y_test shape:", y_test.shape)

# KNeighbors classifier
knn = KNeighborsClassifier(n_neighbors=5)
knn.fit(x_train, y_train)

k_pred = knn.predict(x_test)
k_acc = accuracy_score(y_test, k_pred)
k_con = confusion_matrix(y_test, k_pred)
k_class = classification_report(y_test, k_pred)
print("KNeighbors Accuracy score ", k_acc)
print("***************************************")
print("KNeighbors confusion_matrix \n", k_con)
print("***************************************")
print("KNeighbors classification_report\n", k_class)
print("***************************************")

# Naive bayes
nb = GaussianNB()
nb.fit(x_train, y_train)

nb_pred = nb.predict(x_test)
nb_acc = accuracy_score(y_test, nb_pred)
nb_con = confusion_matrix(y_test, nb_pred)
nb_class = classification_report(y_test, nb_pred)
print("Naive bayes Accuracy score ", np.round(nb_acc, 0))
print("***************************************")
print("Naive bayes confusion_matrix ", nb_con)
print("***************************************")
print("Naive bayes classification_report \n", nb_class)
print("***************************************")

# We got the accuracy score of Naive bayes and KNeighbors as 100%

print("KNeighbors Accuracy score ", k_acc)
print("Naive bayes Accuracy score ", np.round(nb_acc, 0))
